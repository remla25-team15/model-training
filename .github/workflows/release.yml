name: Release Model

on:
  push:
    tags: ["v[0-9]+.[0-9]+.[0-9]+"]
    branches:
        - [YOUR-BRANCH-NAME]

env:
  GDRIVE_FOLDER_NAME: Model-releases

jobs:
  release-model:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo at tag
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Write GDrive SA key
        run: |
          mkdir -p secrets
          echo '${{ secrets.GDRIVE_SA_KEY }}' > secrets/sa_key.json

      - name: Set env for DVC
        run: echo "DVC_GDRIVE_SERVICE_ACCOUNT_JSON_FILE_PATH=secrets/sa_key.json" >> $GITHUB_ENV

      - name: Pull DVC data
        run: dvc pull -v

      - name: Reproduce pipeline
        run: dvc repro

      - name: Push DVC data to remote
        run: dvc push -v

      - name: Install rclone
        run: |
          curl https://rclone.org/install.sh | sudo bash

      - name: Configure rclone
        run: |
          echo '${{ secrets.GDRIVE_SA_KEY }}' > gdrive-sa.json
          rclone config create gdrive_drive drive scope=drive service_account_file=gdrive-sa.json

      - name: Upload both model files to versioned Google Drive folder
        run: |
          rclone mkdir 'gdrive_drive:${{ env.GDRIVE_FOLDER_NAME }}/${{ github.ref_name }}/' --drive-shared-with-me
          rclone copy output/c1_BoW_Sentiment_Model.pkl 'gdrive_drive:${{ env.GDRIVE_FOLDER_NAME }}/${{ github.ref_name }}/' --drive-shared-with-me
          rclone copy output/c2_Classifier_Sentiment_Model.pkl 'gdrive_drive:${{ env.GDRIVE_FOLDER_NAME }}/${{ github.ref_name }}/' --drive-shared-with-me

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.REMLA_GITHUB_TOKEN }}

      - name: Upload model artifact 1 to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: output/c1_BoW_Sentiment_Model.pkl
          asset_name: c1_BoW_Sentiment_Model.pkl
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.REMLA_GITHUB_TOKEN }}

      - name: Upload model artifact 2 to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: output/c2_Classifier_Sentiment_Model.pkl
          asset_name: c2_Classifier_Sentiment_Model.pkl
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.REMLA_GITHUB_TOKEN }}
